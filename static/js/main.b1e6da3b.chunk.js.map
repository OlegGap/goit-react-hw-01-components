{"version":3,"sources":["components/FriendList/FriendList.module.scss","components/Stats/Stats.module.scss","components/TransactionHistory/TransactionHistory.module.scss","components/Profile/Profile.js","components/Stats/Stats.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","Wrapper","styled","div","Description","StatsWrapper","ul","className","src","alt","followers","views","likes","defaultProps","Stats","title","backgrounItemColors","styles","statsSection","statsList","map","stat","randomColorIndex","Math","floor","random","length","backgrounColor","background","item","key","id","style","label","percentage","FriendList","friends","friendList","friend","isOnline","statusClsss","status","statusActive","width","TransactionHistory","items","transactionHistory","thead","index","type","amount","currency","tr","trEven","App","user","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1e6da3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__26R9w\",\"item\":\"FriendList_item__3qNuE\",\"status\":\"FriendList_status__PuxEJ\",\"avatar\":\"FriendList_avatar__3rZWT\",\"name\":\"FriendList_name__1AJm3\",\"statusActive\":\"FriendList_statusActive__2RXE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Stats_statsSection__151Gy\",\"title\":\"Stats_title__3yrWY\",\"statsList\":\"Stats_statsList__2DXmi\",\"item\":\"Stats_item__2LSQ0\",\"label\":\"Stats_label__1KnoE\",\"percentage\":\"Stats_percentage__2kLdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2B0wl\",\"thead\":\"TransactionHistory_thead__2UrJp\",\"tr\":\"TransactionHistory_tr__3Jf8i\",\"trEven\":\"TransactionHistory_trEven__3xhKj\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  const Wrapper = styled.div`\n    width: 250px;\n    height: 330px;\n    border-radius: 4px;\n    box-shadow: 0px 1px 3px rgba(191, 205, 222, 0.75);\n    background-color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0 auto;\n  `;\n  const Description = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 30px;\n    .avatar {\n      width: 99px;\n      height: 99px;\n      border-radius: 49px;\n      background-color: #000000;\n    }\n    .name {\n      font-size: 18px;\n      line-height: 32px;\n      color: #122236;\n      font-family: 'Lato';\n      font-weight: 700;\n    }\n    .tag,\n    .location {\n      font-size: 14px;\n      line-height: 32px;\n      color: #768696;\n      font-family: 'Lato';\n      font-weight: 400;\n    }\n  `;\n  const StatsWrapper = styled.ul`\n    width: 249px;\n    height: 76px;\n    background-color: #f3f6f9;\n    border: 1px solid #e4e9f0;\n    list-style: none;\n    display: flex;\n    flex-direction: row;\n    justify-self: flex-end;\n    li {\n      border: 1px solid #e4e9f0;\n      border-button: none;\n      width: 82px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      .label {\n        font-size: 12px;\n        color: #768696;\n        font-family: 'Lato';\n        font-weight: 400;\n      }\n      .quantity {\n        font-size: 14px;\n        color: #1f3349;\n        font-family: 'Lato';\n        font-weight: 900;\n      }\n    }\n  `;\n  return (\n    <Wrapper className=\"profile\">\n      <Description className=\"description\">\n        <img src={avatar} alt=\"user avatar\" className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">{tag}</p>\n        <p className=\"location\">{location}</p>\n      </Description>\n\n      <StatsWrapper className=\"stats\">\n        <li>\n          <span className=\"label\">Followers </span>\n          <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views </span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes </span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </StatsWrapper>\n    </Wrapper>\n  );\n};\n\nProfile.defaultProps = {\n  tag: 'No tagname',\n  stats: {\n    followers: 0,\n    views: 0,\n    likes: 0,\n  },\n};\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Stats.module.scss';\n\nconst Stats = ({ title, stats }) => {\n  const backgrounItemColors = [\n    'a33cf2',\n    '21b8c6',\n    'e64c65',\n    '4fc4f6',\n    '80ff00',\n    '0080ff',\n    '8000ff',\n    'ff9999',\n    'ff6b00',\n  ];\n\n  return (\n    <section className={styles.statsSection}>\n      <h2 className={styles.title}>{title}</h2>\n\n      <ul className={styles.statsList}>\n        {stats.map(stat => {\n          const randomColorIndex = Math.floor(\n            Math.random() * backgrounItemColors.length,\n          );\n\n          const backgrounColor = {\n            background: `#${backgrounItemColors[randomColorIndex]}`,\n          };\n          return (\n            <li className={styles.item} key={stat.id} style={backgrounColor}>\n              <span className=\"label\">{stat.label}</span>\n              <span className=\"percentage\">{`${stat.percentage}%`}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStats.defaultProps = {\n  title: '',\n};\nStats.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ).isRequired,\n};\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.scss';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friend => {\n        const { avatar, name, isOnline, id } = friend;\n        let statusClsss = [styles.status];\n        if (isOnline) {\n          statusClsss = styles.statusActive;\n        }\n        return (\n          <li className={styles.item} key={id}>\n            <span className={statusClsss} />\n            <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\n            <p className={styles.name}>{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.scss';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead className={styles.thead}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((item, index) => {\n          const { id, type, amount, currency } = item;\n          return (\n            <tr\n              key={id}\n              className={index % 2 === 0 ? styles.tr : styles.trEven}\n            >\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      currency: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './components/Profile/Profile';\nimport Stats from './components/Stats/Stats';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\nimport './styles.css';\n\nfunction App() {\n  const user = {\n    name: 'Jacques Gluke',\n    tag: '@jgluke',\n    location: 'Ocho Rios, Jamaica',\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',\n    stats: {\n      followers: 5603,\n      views: 4827,\n      likes: 1308,\n    },\n  };\n  const stats = [\n    { id: 'id-1', label: '.docx', percentage: 22 },\n    { id: 'id-2', label: '.pdf', percentage: 4 },\n    { id: 'id-3', label: '.mp3', percentage: 17 },\n    { id: 'id-4', label: '.psd', percentage: 47 },\n    { id: 'id-5', label: '.pdf', percentage: 10 },\n  ];\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Stats title=\"Upload stats\" stats={stats} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}