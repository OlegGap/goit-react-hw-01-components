{"version":3,"sources":["components/FriendList/FriendList.module.scss","components/Stats/Stats.module.scss","components/TransactionHistory/TransactionHistory.module.scss","components/Profile/styles.js","components/Profile/Profile.jsx","utils/takeRandomBackgrounColor.js","components/Stats/Stats.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Wrapper","styled","div","Description","StatsWrapper","ul","Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","defaultProps","takeRandomBackgrounColor","allColorsArray","randomColorIndex","Math","floor","random","length","background","Stats","title","styles","statsSection","statsList","map","stat","item","key","id","style","backgrounColorsArray","label","percentage","FriendList","friends","friendList","isOnline","statusActive","status","TransactionHistory","items","transactionHistory","thead","index","type","amount","currency","tr","trEven","App","user","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46dd7cb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__26R9w\",\"item\":\"FriendList_item__3qNuE\",\"avatar\":\"FriendList_avatar__3rZWT\",\"name\":\"FriendList_name__1AJm3\",\"status\":\"FriendList_status__PuxEJ\",\"statusActive\":\"FriendList_statusActive__2RXE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Stats_statsSection__151Gy\",\"title\":\"Stats_title__3yrWY\",\"statsList\":\"Stats_statsList__2DXmi\",\"item\":\"Stats_item__2LSQ0\",\"label\":\"Stats_label__1KnoE\",\"percentage\":\"Stats_percentage__2kLdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2B0wl\",\"thead\":\"TransactionHistory_thead__2UrJp\",\"tr\":\"TransactionHistory_tr__3Jf8i\",\"trEven\":\"TransactionHistory_trEven__3xhKj\"};","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 250px;\n  height: 330px;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px rgba(191, 205, 222, 0.75);\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin: 0 auto;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  .avatar {\n    width: 99px;\n    height: 99px;\n    border-radius: 49px;\n    background-color: #000000;\n  }\n  .name {\n    font-size: 18px;\n    line-height: 32px;\n    color: #122236;\n    font-family: 'Lato';\n    font-weight: 700;\n  }\n  .tag,\n  .location {\n    font-size: 14px;\n    line-height: 32px;\n    color: #768696;\n    font-family: 'Lato';\n    font-weight: 400;\n  }\n`;\nexport const StatsWrapper = styled.ul`\n  width: 249px;\n  height: 76px;\n  background-color: #f3f6f9;\n  border: 1px solid #e4e9f0;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-self: flex-end;\n  li {\n    border: 1px solid #e4e9f0;\n    border-button: none;\n    width: 82px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    .label {\n      font-size: 12px;\n      color: #768696;\n      font-family: 'Lato';\n      font-weight: 400;\n    }\n    .quantity {\n      font-size: 14px;\n      color: #1f3349;\n      font-family: 'Lato';\n      font-weight: 900;\n    }\n  }\n`;\n\n// export default { Wrapper, Description, StatsWrapper };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Wrapper, Description, StatsWrapper } from './styles.js';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <Wrapper className=\"profile\">\n    <Description className=\"description\">\n      <img src={avatar} alt=\"user avatar\" className=\"avatar\" />\n      <p className=\"name\">{name}</p>\n      <p className=\"tag\">{tag}</p>\n      <p className=\"location\">{location}</p>\n    </Description>\n\n    <StatsWrapper className=\"stats\">\n      <li>\n        <span className=\"label\">Followers </span>\n        <span className=\"quantity\">{stats.followers}</span>\n      </li>\n      <li>\n        <span className=\"label\">Views </span>\n        <span className=\"quantity\">{stats.views}</span>\n      </li>\n      <li>\n        <span className=\"label\">Likes </span>\n        <span className=\"quantity\">{stats.likes}</span>\n      </li>\n    </StatsWrapper>\n  </Wrapper>\n);\n\nProfile.defaultProps = {\n  tag: 'No tagname',\n  stats: {\n    followers: 0,\n    views: 0,\n    likes: 0,\n  },\n};\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\nexport default Profile;\n","const takeRandomBackgrounColor = allColorsArray => {\n  const randomColorIndex = Math.floor(Math.random() * allColorsArray.length);\n\n  return {\n    background: `#${allColorsArray[randomColorIndex]}`,\n  };\n};\nexport default takeRandomBackgrounColor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport takeRandomBackgrounColor from '../../utils/takeRandomBackgrounColor.js';\nimport styles from './Stats.module.scss';\nimport backgrounColorsArray from '../db/statsBackgroundColor.json';\n\nconst Stats = ({ title, stats }) => {\n  return (\n    <section className={styles.statsSection}>\n      <h2 className={styles.title}>{title}</h2>\n\n      <ul className={styles.statsList}>\n        {stats.map(stat => {\n          return (\n            <li\n              className={styles.item}\n              key={stat.id}\n              style={takeRandomBackgrounColor(backgrounColorsArray)}\n            >\n              <span className=\"label\">{stat.label}</span>\n              <span className=\"percentage\">{`${stat.percentage}%`}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStats.defaultProps = {\n  title: '',\n};\nStats.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ).isRequired,\n};\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.scss';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendList}>\n    {friends.map(({ avatar, name, isOnline, id }) => {\n      return (\n        <li className={styles.item} key={id}>\n          <span className={isOnline ? styles.statusActive : styles.status} />\n          <img className={styles.avatar} src={avatar} alt=\"avatar\" />\n          <p className={styles.name}>{name}</p>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.scss';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead className={styles.thead}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }, index) => {\n          return (\n            <tr\n              key={id}\n              className={index % 2 === 0 ? styles.tr : styles.trEven}\n            >\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      currency: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from '../Profile/Profile';\nimport Stats from '../Stats/Stats';\nimport FriendList from '../FriendList/FriendList';\nimport friends from '../db/friends.json';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport transactions from '../TransactionHistory/transactions.json';\nimport user from '../db/user.json';\nimport stats from '../db/stats.json';\nimport './styles.css';\n\nconst App = () => (\n  <div>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Stats title=\"Upload stats\" stats={stats} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}